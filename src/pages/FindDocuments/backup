import React from "react";
import { Input, Button, Space, Form } from "antd";
import wording from "../../util/wording";
import { MinusCircleOutlined, PlusOutlined } from "@ant-design/icons";

// const { Search } = Input;

const onSearch = (value) => console.log(value);

const find_document = () => {
  const order = {
    items: [
      {
        key: wording.claim_box_no,
        value: "",
      },
      {
        key: wording.claim_no,
        value: "",
      },
      {
        key: wording.claim_warehouse_no,
        value: "",
      },
      {
        key: wording.claim_doc_type,
        value: "",
      },
      {
        key: wording.action_username,
        value: "",
      },
      {
        key: wording.action_date,
        value: "",
      },
      {
        key: wording.claim_status,
        value: "",
      },
    ],
  };

  const onFinish = (values) => {
    console.log(values);
  };

  const itemInputs = order.items.map((item) => {
    return {
      key: item.key,
      value: item.value,
    };
  });

  return (
    <>
      {/* <Form onFinish={onFinish}>
        <Form.List name="items" initialValue={itemInputs}>
          {(fields, { add, remove }) => (
            <>
              {fields.map((field) => (
                <Space
                  key={field.key}
                  style={{ display: "flex", marginBottom: 8 }}
                  align="baseline"
                  // style={{ width: 304 }}
                >
                  <Form.Item
                    {...field}
                    name={[field.name, "key"]}
                    fieldKey={[field.fieldKey, "value"]}
                  >
                    <Input
                      //addonBefore={wording.claim_box_no}
                      placeholder={""}
                      // allowClear
                      disabled
                      onSearch={onSearch}
                      style={{
                        margin: "auto",
                        width: 120,
                        marginTop: "15px",
                        marginLeft: "25px",
                        fontSize: "16px",
                      }}
                    />
                  </Form.Item>
                  <Form.Item
                    {...field}
                    name={[field.name, "value"]}
                    fieldKey={[field.fieldKey, "value"]}
                  >
                    <Input
                      placeholder=""
                      style={{
                        margin: "auto",
                        width: 184,
                        marginTop: "15px",
                        marginLeft: "-18px",
                        fontSize: "16px",
                      }}
                    />
                  </Form.Item>
                  <MinusCircleOutlined onClick={() => remove(field.name)} />
                </Space>
              ))}
              <Form.Item>
                <Button
                  type="dashed"
                  onClick={() => add()}
                  // block
                  icon={<PlusOutlined />}
                >
                  Add item
                </Button>
              </Form.Item>
            </>
          )}
        </Form.List>

        <Form.Item>
          <Button type="primary" htmlType="submit">
            {" "}
            Change Details{" "}
          </Button>
        </Form.Item>
      </Form> */}
      {/* <Space>
        <Input
          addonBefore={wording.claim_box_no}
          placeholder=""
          allowClear
          onSearch={onSearch}
          style={{
            width: 304,
            marginTop: "15px",
            marginLeft: "25px",
            fontSize: "16px",
          }}
        />
        <Button
          type="primary"
          style={{
            fontSize: "18px",
            marginTop: "15px",
          }}
        >
          {wording.search_button}
        </Button>
      </Space> */}
      <p style={{ fontSize: "50px" }}>Find Document Page Test</p>
    </>
  );
};

export default find_document;



################################################################################

import React, { useState } from "react";
import { Input, Button, Space, Form } from "antd";
import wording from "../../util/wording";
import { MinusCircleOutlined, PlusOutlined } from "@ant-design/icons";
import "./FindDocument.style.scss";

// const { Search } = Input;

const FindDocument = () => {
  const [formValues, setFormValues] = useState([{ name: "", email: "" }]);

  let handleChange = (i, e) => {
    let newFormValues = [...formValues];
    newFormValues[i][e.target.name] = e.target.value;
    setFormValues(newFormValues);
  };

  let addFormFields = () => {
    setFormValues([...formValues, { name: "", email: "" }]);
  };

  let removeFormFields = (i) => {
    let newFormValues = [...formValues];
    newFormValues.splice(i, 1);
    setFormValues(newFormValues);
  };

  let handleSubmit = (event) => {
    event.preventDefault();
    alert(JSON.stringify(formValues));
  };

  return (
    <form onSubmit={handleSubmit}>
      {formValues.map((element, index) => (
        <div className="form-inline" key={index}>
          <label>Name</label>
          <input
            type="text"
            name="name"
            value={element.name || ""}
            onChange={(e) => handleChange(index, e)}
          />
          <label>Email</label>
          <input
            type="text"
            name="email"
            value={element.email || ""}
            onChange={(e) => handleChange(index, e)}
          />
          {index ? (
            <button
              type="button"
              className="button remove"
              onClick={() => removeFormFields(index)}
            >
              Remove
            </button>
          ) : null}
        </div>
      ))}
      <div className="button-section">
        <button
          className="button add"
          type="button"
          onClick={() => addFormFields()}
        >
          Add
        </button>
        <button className="button submit" type="submit">
          Submit
        </button>
      </div>
    </form>
  );
};

export default FindDocument;
